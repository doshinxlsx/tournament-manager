// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  username  String    @unique
  password  String
  role      UserRole  @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]

  @@map(name: "user")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Match {
  id          Int         @id @default(autoincrement())
  matchId     String      @map(name: "match_id")
  team_A      String      @map(name: "team_1")
  team_B      String      @map(name: "team_2")
  slug_A      String      @map(name: "slug_1")
  slug_B      String      @map(name: "slug_2")
  score_A     Int         @default(0) @map(name: "score_A")
  score_B     Int         @default(0) @map(name: "score_B")
  referee     String      @map(name: "referee")
  matchDate   DateTime    @default(now()) @map(name: "match_date")
  timeLapsed  Int         @default(0)
  createdAt   DateTime    @default(now()) @map(name: "created_at")
  updatedAt   DateTime    @default(now()) @map(name: "updated_at")
  matchStatus MatchStatus @default(DECLARED) @map(name: "match_status")

  @@map(name: "match")
}

model Team {
  id           Int      @id @default(autoincrement())
  team_name    String   @unique
  slug         String
  group        String
  goalNumber   Int      @default(0) @map(name: "goal_number")
  totalMatches Int      @default(0) @map(name: "total_matches")
  totalPoints  Int      @default(0) @map(name: "total_points")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "team")
}

enum UserRole {
  ADMIN
  USER
}

enum MatchStatus {
  DECLARED
  ONGOING
  FINISHED
}
